summarise(Sum_varieties = length(varieties),
sum_size = sum(size),
seed_mean = round(mean(seed), 2),
urea_mean = round(mean(urea), 2),
phosphate_mean = round(mean(phosphate), 2),
hiredlabor_mean = round(mean(hiredlabor), 2),
totlabor_mean = sum(totlabor),
wage_mean = round(mean(wage), 2),
goutput_mean = (sum(goutput) - sum(noutput)),
price_mean = round(mean(price), 2),
)%>%
arrange()
cols <- c("mixed","high","trad")
for (i in cols) {
summary_var <- enquo(i)
summary_nm <- quo_name(summary_var)
a <- data %>%
filter(varieties == print(i)) %>%
group_by(region) %>%
summarise(!!summary_nm := length(varieties)) %>%
arrange()
filter17 <- cbind(filter17[1],a[2],filter17[,2:ncol(filter17)])
}
filter17 = data %>%
group_by(region) %>%
summarise(Sum_varieties = length(varieties),
sum_size = sum(size),
seed_mean = round(mean(seed), 2),
urea_mean = round(mean(urea), 2),
phosphate_mean = round(mean(phosphate), 2),
hiredlabor_mean = round(mean(hiredlabor), 2),
sum_totlabor = sum(totlabor),
wage_mean = round(mean(wage), 2),
goutput_mean = (sum(goutput) - sum(noutput)),
price_mean = round(mean(price), 2),
)%>%
arrange()
cols <- c("mixed","high","trad")
for (i in cols) {
summary_var <- enquo(i)
summary_nm <- quo_name(summary_var)
a <- data %>%
filter(varieties == print(i)) %>%
group_by(region) %>%
summarise(!!summary_nm := length(varieties)) %>%
arrange()
filter17 <- cbind(filter17[1],a[2],filter17[,2:ncol(filter17)])
}
filter17 = data %>%
group_by(region) %>%
summarise(Sum_varieties = length(varieties),
sum_size = sum(size),
seed_mean = round(mean(seed), 2),
urea_mean = round(mean(urea), 2),
phosphate_mean = round(mean(phosphate), 2),
hiredlabor_mean = round(mean(hiredlabor), 2),
sum_totlabor = sum(totlabor),
wage_mean = round(mean(wage), 2),
sum_goutput = (sum(goutput) - sum(noutput)),
price_mean = round(mean(price), 2),
)%>%
arrange()
cols <- c("mixed","high","trad")
for (i in cols) {
summary_var <- enquo(i)
summary_nm <- quo_name(summary_var)
a <- data %>%
filter(varieties == print(i)) %>%
group_by(region) %>%
summarise(!!summary_nm := length(varieties)) %>%
arrange()
filter17 <- cbind(filter17[1],a[2],filter17[,2:ncol(filter17)])
}
runApp()
filter12 = data %>%
group_by(region) %>%
summarise(Number = length(x))%>%
arrange(desc(Number))
View(filter12)
plot_ly(filter12, labels = ~region, values = ~Number, type = 'pie')
runApp()
View(filter18)
View(filter18)
runApp()
shiny::runApp()
runApp()
runApp()
View(filter16)
View(filter16)
runApp()
filter17 = data %>%
group_by(region) %>%
summarise(sum_varieties = length(varieties),
sum_size = sum(size),
seed_mean = round(mean(seed), 2),
urea_mean = round(mean(urea), 2),
phosphate_mean = round(mean(phosphate), 2),
hiredlabor_mean = round(mean(hiredlabor), 2),
sum_totlabor = sum(totlabor),
wage_mean = round(mean(wage), 2),
sum_goutput = (sum(goutput) - sum(noutput)),
price_mean = round(mean(price), 2),
)%>%
arrange()
cols <- c("mixed","high","trad")
for (i in cols) {
summary_var <- enquo(i)
summary_nm <- quo_name(summary_var)
a <- data %>%
filter(varieties == print(i)) %>%
group_by(region) %>%
summarise(!!summary_nm := length(varieties)) %>%
arrange()
filter17 <- cbind(filter17[1],a[2],filter17[,2:ncol(filter17)])
}
View(filter17)
runApp()
View(filter18)
View(filter16)
runApp()
View(filter16)
runApp()
shiny::runApp()
View(data)
View(data)
filter18 <- data.frame(t(filter17)) %>%
rownames_to_column() %>%
distinct_at(vars(-rowname), .keep_all = T)
library(tidyverse)
library(dplyr)
library(knitr)
library(forecast)
library(sqldf)
library(corrplot)
library(BMA)
library(sqldf)
library(corrplot)
library(BMA)
filter18 <- data.frame(t(filter17)) %>%
rownames_to_column() %>%
distinct_at(vars(-rowname), .keep_all = T)
View(filter18)
filter18 <- data.frame(t(filter17)) %>%
rownames_to_column() %>%
distinct_at(vars(-region), .keep_all = T)
filter17 = data %>%
group_by(region) %>%
summarise(sum_varieties = length(varieties),
sum_size = sum(size),
seed_mean = round(mean(seed), 2),
urea_mean = round(mean(urea), 2),
phosphate_mean = round(mean(phosphate), 2),
hiredlabor_mean = round(mean(hiredlabor), 2),
sum_totlabor = sum(totlabor),
wage_mean = round(mean(wage), 2),
sum_goutput = (sum(goutput) - sum(noutput)),
price_mean = round(mean(price), 2),
)%>%
arrange()
filter18 <- data.frame(t(filter17)) %>%
rownames_to_column() %>%
distinct_at(vars(-rowname), .keep_all = T)
cols <- c("mixed","high","trad")
for (i in cols) {
summary_var <- enquo(i)
summary_nm <- quo_name(summary_var)
a <- data %>%
filter(varieties == print(i)) %>%
group_by(region) %>%
summarise(!!summary_nm := length(varieties)) %>%
arrange()
filter17 <- cbind(filter17[1],a[2],filter17[,2:ncol(filter17)])
}
filter18 <- data.frame(t(filter17)) %>%
distinct_at(vars(-rowname), .keep_all = T)
filter18 <- data.frame(t(filter17)) %>%
rownames_to_column()
filter18 <- data.frame(t(filter17)) %>%
rownames_to_column(filter17$region)
filter18 <- data.frame(t(filter17)) %>%
rownames_to_column(region)
filter18 <- data.frame(t(filter17)) %>%
rownames_to_column(filter17$region)
filter18 <- cbind(rownames(filter17), data.frame(filter17, row.names=NULL))
filter18 <- data.frame(t(filter17)) %>%
rownames_to_column(var='region')
filter18 <- data.frame(t(filter17)) %>%
rownames_to_column() %>%
remove_rownames()
filter18 <- rownames_to_column(filter17) %>%
remove_rownames()
filter18 <- t(filter17)
filter18 <- t(filter17)
colnames(filter18) = filter17$region
filter18 <- data.frame(t(filter17[2:]))
colnames(filter18) = filter17$region
filter18 <- data.frame(t(filter17))
colnames(filter18) = filter17$region
filter18 <- data.frame(t(filter17)[2])
colnames(filter18) = filter17$region
filter18 <- data.frame(t(filter17)[:2])
colnames(filter18) = filter17$region
filter18 <- data.frame(t(filter17)[,:2])
colnames(filter18) = filter17$region
filter18 <- data.frame(t(filter17)[2,])
colnames(filter18) = filter17$region
filter18 <- data.frame(t(filter17[2,]))
colnames(filter18) = filter17$region
filter18 <- data.frame(t(filter17[,2]))
colnames(filter18) = filter17$region
filter18 <- data.frame(t(filter17)) %>%
rownames_to_column(var = 'title')
colnames(filter18) = filter17$region
runApp()
filter18 <- data.frame(t(filter17))
colnames(filter18) = c('title',filter17$region)
filter18 <- data.frame(t(filter17)) %>%
rownames_to_column(var = 'title')
colnames(filter18) = c('title',filter17$region)
filter18 <- data.frame(t(filter17)) %>%
rownames_to_column(var = 'title') %>%
filter(title != "region")
colnames(filter18) = c('title',filter17$region)
filter17 = data %>%
group_by(region) %>%
summarise(sum_varieties = length(varieties),
sum_size = sum(size),
seed_mean = round(mean(seed), 2),
urea_mean = round(mean(urea), 2),
phosphate_mean = round(mean(phosphate), 2),
hiredlabor_mean = round(mean(hiredlabor), 2),
sum_totlabor = sum(totlabor),
wage_mean = round(mean(wage), 2),
sum_goutput = (sum(goutput) - sum(noutput)),
price_mean = round(mean(price), 2),
)%>%
arrange()
filter18 <- data.frame(t(filter17)) %>%
rownames_to_column(var = 'title') %>%
filter(title != "region")
colnames(filter18) = c('title',filter17$region)
cols <- c("mixed","high","trad")
for (i in cols) {
summary_var <- enquo(i)
summary_nm <- quo_name(summary_var)
a <- data %>%
filter(varieties == print(i)) %>%
group_by(region) %>%
summarise(!!summary_nm := length(varieties)) %>%
arrange()
filter17 <- cbind(filter17[1],a[2],filter17[,2:ncol(filter17)])
}
filter17 = data %>%
group_by(region) %>%
summarise(varieties_sum = length(varieties),
size_sum = sum(size),
seed_mean = round(mean(seed), 2),
urea_mean = round(mean(urea), 2),
phosphate_mean = round(mean(phosphate), 2),
hiredlabor_mean = round(mean(hiredlabor), 2),
totlabor_sum = sum(totlabor),
mean_wage = round(mean(wage), 2),
goutput_sum = (sum(goutput) - sum(noutput)),
price_mean = round(mean(price), 2),
)%>%
arrange()
filter18 <- data.frame(t(filter17)) %>%
rownames_to_column(var = 'title') %>%
filter(title != "region")
colnames(filter18) = c('title',filter17$region)
cols <- c("mixed","high","trad")
for (i in cols) {
summary_var <- enquo(i)
summary_nm <- quo_name(summary_var)
a <- data %>%
filter(varieties == print(i)) %>%
group_by(region) %>%
summarise(!!summary_nm := length(varieties)) %>%
arrange()
filter17 <- cbind(filter17[1],a[2],filter17[,2:ncol(filter17)])
}
runApp()
filter18$title = sub(".*_", "", filter18$title)
filter18$title = sub("._*", "", filter18$title)
filter18$title = sub("_*. ", "", filter18$title)
filter18$title = sub("*_. ", "", filter18$title)
filter18$title = sub("*_", "", filter18$title)
filter18$title = sub("._", "", filter18$title)
filter18$title = sub(".*_", "", filter18$title)
View(filter18)
filter18$title = sub(".*_.", "", filter18$title)
filter18 <- data.frame(t(filter17)) %>%
rownames_to_column(var = 'title') %>%
filter(title != "region")
filter18$title = sub(".*_.", "", filter18$title)
colnames(filter18) = c('title',filter17$region)
filter18 <- data.frame(t(filter17)) %>%
rownames_to_column(var = 'title') %>%
filter(title != "region")
filter18$title = sub(".*_", "", filter18$title)
colnames(filter18) = c('title',filter17$region)
filter18 <- data.frame(t(filter17)) %>%
rownames_to_column(var = 'title') %>%
filter(title != "region")
filter18$title = sub("._*", "", filter18$title)
colnames(filter18) = c('title',filter17$region)
filter18 <- data.frame(t(filter17)) %>%
rownames_to_column(var = 'title') %>%
filter(title != "region")
filter18$title = sub("._", "", filter18$title)
colnames(filter18) = c('title',filter17$region)
filter18 <- data.frame(t(filter17)) %>%
rownames_to_column(var = 'title') %>%
filter(title != "region")
filter18$title = sub(".*_", "", filter18$title)
colnames(filter18) = c('title',filter17$region)
filter18 <- data.frame(t(filter17)) %>%
rownames_to_column(var = 'title') %>%
filter(title != "region")
filter18$title = sub(".*_ ", "", filter18$title)
colnames(filter18) = c('title',filter17$region)
filter18 <- data.frame(t(filter17)) %>%
rownames_to_column(var = 'title') %>%
filter(title != "region")
filter18$title = sub(".*_", "", filter18$title)
colnames(filter18) = c('title',filter17$region)
filter18 <- data.frame(t(filter17)) %>%
rownames_to_column(var = 'title') %>%
filter(title != "region")
filter18$title = sub("._*", "", filter18$title)
colnames(filter18) = c('title',filter17$region)
filter18 <- data.frame(t(filter17)) %>%
rownames_to_column(var = 'title') %>%
filter(title != "region")
filter18$title = sub("._.*", "", filter18$title)
colnames(filter18) = c('title',filter17$region)
filter18 <- data.frame(t(filter17)) %>%
rownames_to_column(var = 'title') %>%
filter(title != "region")
filter18$title = sub("_.*", "", filter18$title)
colnames(filter18) = c('title',filter17$region)
filter17 = data %>%
group_by(region) %>%
summarise(varieties_sum = length(varieties),
size_sum = sum(size),
seed_mean = round(mean(seed), 2),
urea_mean = round(mean(urea), 2),
phosphate_mean = round(mean(phosphate), 2),
hiredlabor_mean = round(mean(hiredlabor), 2),
totlabor_sum = sum(totlabor),
wage_mean = round(mean(wage), 2),
goutput_sum = (sum(goutput) - sum(noutput)),
price_mean = round(mean(price), 2),
)%>%
arrange()
filter18 <- data.frame(t(filter17)) %>%
rownames_to_column(var = 'title') %>%
filter(title != "region")
filter18$title = sub("_.*", "", filter18$title)
colnames(filter18) = c('title',filter17$region)
cols <- c("mixed","high","trad")
for (i in cols) {
summary_var <- enquo(i)
summary_nm <- quo_name(summary_var)
a <- data %>%
filter(varieties == print(i)) %>%
group_by(region) %>%
summarise(!!summary_nm := length(varieties)) %>%
arrange()
filter17 <- cbind(filter17[1],a[2],filter17[,2:ncol(filter17)])
}
shiny::runApp()
library(dplyr)
runApp()
runApp()
runApp()
group_data(data$varieties)
runApp()
shiny::runApp()
runApp()
shiny::runApp()
filter18 = data %>%
group_by(region) %>%
summarise(varieties_sum = length(varieties),
size_sum = sum(size),
seed_mean = sum(seed),
urea_mean = sum(urea),
phosphate_mean = sum(phosphate),
hiredlabor_mean = sum(hiredlabor),
totlabor_sum = sum(totlabor),
wage_mean = sum(wage),
goutput_sum = (sum(goutput) - sum(noutput)),
price_mean = sum(price),
)  %>% arrange()
filter19 <- data.frame(t(filter18)) %>%
rownames_to_column(var = 'title') %>%
filter(title != "region")
filter19$title = sub("_.*", "", filter19$title)
colnames(filter19) = c('title',filter17$region)
nameCol <- colnames(filter19)[-1]
filter19[, nameCol] <- lapply(filter19[, nameCol],as.numeric)
filter19$total = rowSums(filter19[,c(-1)])
filter19$mean = round(rowMeans(filter19[,c(-1)]), digits = 2)
runApp()
shiny::runApp()
runApp()
library(shinydashboard)
library(shiny)
library(plotly)
library(dplyr)
library(sqldf)
library(corrplot)
library(BMA)
library(tidyverse)
library(knitr)
library(forecast)
runApp()
runApp()
corrplot(data %>% cor(method = "pearson"))
corrplot(data %>% select(-region,-X,-id,-status,-varieties,-bimas) %>% cor(method = "pearson"))
corrplot(data %>% select(-region,-X,-id,-status,-varieties,-bimas))
corrplot(data %>% select(-region,-X,-id,-status,-varieties,-bimas))
corrplot(data %>% select(-region,-X,-id,-status,-varieties,-bimas) %>% cor(method = "pearson"))
(data %>% select(-region,-X,-id,-status,-varieties,-bimas) %>% cor(method = "pearson"),order = 'AOE')
corrplot(data %>% select(-region,-X,-id,-status,-varieties,-bimas) %>% cor(method = "pearson"),order = 'AOE')
corrplot(data %>% select(-region,-X,-id,-status,-varieties,-bimas) %>% cor(method = "pearson"))
runApp()
runApp()
library(plotly)
library(dplyr)
library(sqldf)
library(corrplot)
library(BMA)
library(tidyverse)
library(knitr)
library(forecast)
library(plotly)
library(dplyr)
library(sqldf)
library(corrplot)
library(BMA)
library(tidyverse)
library(knitr)
library(forecast)
ggplot(data,aes(x = price,y = size,
color = region)) + facet_grid(~region)+geom_point() + geom_smooth(method = "lm") + labs(x ="Economy GDP Per Capita",y = "Happiness Score")
ggplot(data,aes(x = size,y = price,
color = region)) + facet_grid(~region)+geom_point() + geom_smooth(method = "lm") + labs(x ="Economy GDP Per Capita",y = "Happiness Score")
ggplot(data,aes(x = size,y = price,
color = region)) +
facet_grid(~region)+geom_point() +
labs(x ="Economy GDP Per Capita",y = "Happiness Score")
ggplot(data,aes(x = size,y = price,
color = region)) +
facet_grid(~region)+geom_point() +
geom_smooth(method = "lm") +
labs(x ="Economy GDP Per Capita",y = "Happiness Score")
ggplot(data,aes(x = size,y = goutput,
color = region)) +
facet_grid(~region)+geom_point() +
geom_smooth(method = "lm") +
labs(x ="Economy GDP Per Capita",y = "Happiness Score")
shiny::runApp()
corrplot(M, method="circle")
M <- cor(datalm)
corrplot(M, method="circle")
#Corrplot of data
M <- cor(datalm)
datalm <- data[,c(3, 7:20)]
M <- cor(datalm)
corrplot(M, method="circle")
pairs(datalm)
r1 <- lm(goutput ~ noutput, data = datalm)
summary(r1)
plot(price ~ noutput, data = datalm)
abline(r1, col = 'green')
reg <- lm(price~., data = datalm)
step(reg)
summary(reg)
databma <- datalm[,c(1:14)]
pprice <- datalm[,15]
bma <- bicreg(databma, pprice, strict=FALSE, OR=20)
summary(bma)
imageplot.bma(bma)
attach(databma)
analysis <- lm(goutput ~ noutput)
anova(analysis)
summary(analysis)
attach(datalm)
twoway <- lm(price ~ totlabor + noutput + seed, data = datalm)
anova(twoway)
set.seed(45)
train.rows <- sample(rownames(datalm), dim(datalm)[1]*0.8)
train.rows
train.data <- datalm[train.rows, ]
train.data
test.rows <- setdiff(rownames(datalm), train.rows)
test.data <- datalm[test.rows, ]
reg <- lm(price ~ ., data = datalm, subset = train.rows)
reg
summary(reg)
tr.res <- data.frame(train.data$price, reg$fitted.values, reg$residuals)
tr.res
pred <- predict(reg, newdata = test.data)
pred
vl.res <- data.frame(test.data$price, pred, residuals = test.data$price - pred)
vl.res
head(vl.res)
View(tr.res)
accuracy(reg$fitted.values, train.data$price)
pred <- predict(reg, newdata = test.data)
accuracy(pred, test.data$price)
